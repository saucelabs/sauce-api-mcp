name: Build and Test

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-asyncio httpx

    - name: Run tests
      run: pytest tests/ -v

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

release:
  runs-on: ubuntu-latest
  needs: test
  if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
  steps:
  - uses: actions/checkout@v4

  - name: Set up Python
    uses: actions/setup-python@v4
    with:
      python-version: "3.11"

  - name: Install build dependencies
    run: |
      python -m pip install --upgrade pip
      pip install build twine

  - name: Build package
    run: python -m build

  - name: Check what was built
    run: |
      ls -la
      ls -la dist/ || echo "No dist directory found"

  - name: Check package
    run: twine check dist/*

  # Always publish to TestPyPI first
  - name: Publish to TestPyPI
    uses: pypa/gh-action-pypi-publish@release/v1
    with:
      repository-url: https://test.pypi.org/legacy/
      password: ${{ secrets.TEST_PYPI_API_TOKEN }}

  # Production only for clean versions
  - name: Publish to PyPI
    if: "!contains(github.ref, 'beta') && !contains(github.ref, 'rc') && !contains(github.ref, 'alpha')"
    uses: pypa/gh-action-pypi-publish@release/v1
    with:
      password: ${{ secrets.PYPI_API_TOKEN }}